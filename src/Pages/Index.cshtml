@page
@using ContosoCrafts.WebSite.Components
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<div class="header-container">
    <h1 class="hero-text">Team 3 Techno Avengers</h1>
    <button class="filter-button" onclick="openFilterSidebar()">Filter</button>
</div>
<p>@Model.FilteredHeroes.Count superhero(s) found</p>
@(await Html.RenderComponentAsync<ProductList>(RenderMode.ServerPrerendered, new { Products = Model.FilteredHeroes }))

<!-- Sidebar (Initially Hidden) -->
<div id="filterSidebar" class="sidebar">
    <div class="sidebar-header">
        <h4>Filter</h4>
        <span class="close-btn" onclick="closeSidebar()">×</span>
    </div>

    <form method="get" onsubmit="return handleFilterSubmit();">
        <label for="filterCategory"><strong>Filter by:</strong></label>
        <select id="filterCategory" onchange="updateFilterOptions()" style="width: 100%; margin-bottom: 1rem;">
            <option value="">Select Category</option>
            <option value="Alignment">Alignment</option>
        </select>

        <select id="filterValue" name="FilterValue" style="width: 100%; margin-bottom: 1rem;">
            <option value="">Select a value</option>
        </select>

        <input type="hidden" name="FilterCategory" id="filterCategoryHidden" />
        <button type="submit" style="width: 100%;">Filter</button>
    </form>
</div>

<script>
    function openFilterSidebar() {
        document.getElementById("filterSidebar").classList.add("show");
    }

    function closeSidebar() {
        document.getElementById("filterSidebar").classList.remove("show");
    }

    const filterOptions = {
        Alignment: ["good", "bad"]
    };

    function updateFilterOptions() {
        const category = document.getElementById("filterCategory").value;
        const valueSelect = document.getElementById("filterValue");
        const hiddenCategory = document.getElementById("filterCategoryHidden");

        hiddenCategory.value = category;
        valueSelect.innerHTML = '<option value="">Select a value</option>';

        if (category && filterOptions[category]) {
            filterOptions[category].forEach(value => {
                const option = document.createElement("option");
                option.value = value;
                option.textContent = value.charAt(0).toUpperCase() + value.slice(1);
                valueSelect.appendChild(option);
            });
        }
    }

    function handleFilterSubmit() {
        const category = document.getElementById("filterCategory").value;
        const value = document.getElementById("filterValue").value;

        if (!category || !value) {
            alert("Please select both a category and a value.");
            return false;
        }

        return true;
    }
</script>